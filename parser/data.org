#+Title:     Seismic Loss Assessment Tool
#+AUTHOR:    Michael Gauland
#+EMAIL:     michael.gauland@canterbury.ac.nz
#+DATE:      {{{time(%Y-%m-%d %H:%M)}}}
#+DESCRIPTION: 
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:6 num:t toc:4 \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t
#+OPTIONS:   TeX:dvipng LaTeX:dvipng skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+OPTIONS:   timestamp:t email:t
#+OPTIONS:   ':t
#+INFOJS_OPT: view:nil toc:t ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [a4paper]
#+LATEX_HEADER: \usepackage{unicode-math}
#+LaTex_header: \usepackage{epstopdf}
#+LATEX_HEADER: \usepackage{register}
#+LATEX_HEADER: \usepackage{bytefield}
#+LATEX_HEADER: \usepackage{parskip}
#+LATEX_HEADER: \usepackage{tabulary}
#+LATEX_HEADER: \usepackage[section]{placeins}
#+LATEX_HEADER: \usepackage[htt]{hyphenat}
#+LATEX_HEADER: \setlength{\parindent}{0pt}
#+LATEX_HEADER: \lstset{keywordstyle=\color{blue}\bfseries}
#+LATEX_HEADER: \newfontfamily\listingsfont[Scale=.7]{DejaVu Sans Mono}
#+LATEX_HEADER: \lstset{basicstyle=\listingsfont}
#+LATEX_HEADER: \lstset{showspaces=false}
#+LATEX_HEADER: \lstset{columns=fixed}
#+LATEX_HEADER: \lstset{extendedchars=true}
#+LATEX_HEADER: \lstset{frame=shadowbox}
#+LATEX_HEADER: \lstset{basicstyle=\ttfamily}
#+LATEX_HEADER: \definecolor{mygray}{gray}{0.8}
#+LATEX_HEADER: \lstset{rulesepcolor=\color{mygray}}
#+LATEX_HEADER: \lstdefinelanguage{dash}{rulecolor=\color{green},rulesepcolor=\color{mygray},frameround=ffff,backgroundcolor=\color{white}}
#+LATEX_HEADER: \lstdefinelanguage{fundamental}{basicstyle=\ttfamily\scriptsize,rulesepcolor=\color{cyan},frameround=tttt,backgroundcolor=\color{white},breaklines=true}
#+LATEX_HEADER: \usepackage{pst-circ}
#+LATEX_HEADER: \usepackage[hang,small,bf]{caption}
#+LATEX_HEADER: \setlength{\captionmargin}{20pt}
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+STARTUP: overview
#+STARTUP: align
#+STARTUP: noinlineimages
#+PROPERTY: exports both

* Initialisation
  The code in this section reads in the input data, as well as the results
  produces by the old ("paleo") and new ("neo") versions of SLAT.

  Set up variables to make it easier to get to the files:
  #+BEGIN_SRC R :session :exports both :results output
    paleo.dir = paste("~/Downloads/SLATv1.15_Public/",
	"example2_10storeybuilding/", sep="")
    results.dir = paste(paleo.dir, "results/", sep="")
  #+END_SRC

  #+RESULTS:

  Read the IM rate data:
  #+BEGIN_SRC R :session :exports both :results output
    ## Read in the IM data:
    input.im <- read.csv(
        paste(paleo.dir, "IMrateSa15data.txt", sep=""),
        skip=2, header=FALSE, sep="")

    paleo.im <- read.csv(
        paste(results.dir, "im-rate", sep=""),
        skip=3, header=FALSE, sep="")
    names(paleo.im) = c("IM", "lambda")

    neo.im <- read.csv("example2_im_rate.txt", 
                       header=TRUE, sep="")
  #+END_SRC
  
  #+RESULTS:

  Read the EDP input data. Store the data for acceleration and drift in separate
  variables:
  #+BEGIN_SRC R :session :exports both :results output
    ## Define a constant for the number of EDPs. 
    N = 21  

    accel.input <- list()
    drift.input <- list()

    for (i in seq(N)) {
        index = ceiling(i/2)

        temp = read.csv(
            sprintf("%sRB_EDP%d.txt", paleo.dir, i),
            skip=2, header=FALSE, sep="")
        ## Zero indicates collapse; change to NA:
        temp[temp == 0] <- NA

        datacol = ncol(temp)
        names(temp)[1] <- "IM"
        temp$median = exp(rowMeans(log(temp[,2:datacol]), 
            na.rm=TRUE))
        temp$mean = rowMeans(temp[,2:datacol], na.rm=TRUE)
        temp$C <- rowSums(is.na(temp[,2:datacol])) /
            (datacol - 1)

        if (i %% 2 == 1) {
            accel.input[[index]] <- temp
        } else {
            drift.input[[index]] <- temp
        }
    }
      #+END_SRC

      #+RESULTS:

      
      Read the EDP data (both response and rate) generated by paleoslat. Store
      the data for acceleration and drift in separate variables, and store the
      response separately from the rate:
      #+BEGIN_SRC R :session :exports both :results output
        accel.paleo <- list()
        drift.paleo <- list()

        accel.rate.paleo <- list()
        drift.rate.paleo <- list()

        for (i in seq(N)) {
            index = ceiling(i/2)

            temp = read.csv(
                sprintf("%sedp-im-%d", results.dir, i),
                skip=3, header=FALSE, sep="")
            names(temp) <- c("IM", "mean_x", "sd_ln_x")
            if (i %% 2 == 1) {
                accel.paleo[[index]] <- temp
            } else {
                drift.paleo[[index]] <- temp
            }


            temp = read.csv(
                sprintf("%sedp-rate-%d", results.dir, i),
                skip=3, header=FALSE, sep="")
            names(temp) <- c("EDP", "lambda")
            if (i %% 2 == 1) {
                accel.rate.paleo[[index]] <- temp
            } else {
                drift.rate.paleo[[index]] <- temp
            }
        }
    #+END_SRC

    #+RESULTS:

    Do the same with the data generated by neoslat:
      #+BEGIN_SRC R :session :exports both :results output
        accel.neo <- list()
        drift.neo <- list()

        accel.rate.neo <- list()
        drift.rate.neo <- list()

        for (i in seq(N)) {
            index = ceiling(i/2)

            temp = read.csv(
                sprintf("example2_im_edp%d.txt", i),
                skip=0, header=TRUE, sep="")
            if (i %% 2 == 1) {
                accel.neo[[index]] <- temp
            } else {
                drift.neo[[index]] <- temp
            }

            temp = read.csv(
                sprintf("example2_edp%d_rate.txt", i),
                skip=0, header=TRUE, sep="")
            if (i %% 2 == 1) {
                accel.rate.neo[[index]] <- temp
            } else {
                drift.rate.neo[[index]] <- temp
            }
        }
    #+END_SRC

    #+RESULTS:

    Read the collapse data, from both versions:
      #+BEGIN_SRC R :session :exports both :results output
        collapse.paleo = read.csv(
                  sprintf("%scollapse-im", results.dir),
                  skip=3, header=FALSE, sep="")
        names(collapse.paleo) <- c("IM", "p.Collapse")

        collapse.neo = read.csv("example2_collapse.txt",
                  skip=0, header=TRUE, sep="")
        names(collapse.neo) <- c("IM", "p.Collapse")
    #+END_SRC

    #+RESULTS:

    Read the loss-edp and loss-im data for the first component group, from both
    versions:
      #+BEGIN_SRC R :session :exports both :results output
         loss.im.paleo = read.csv(
                  sprintf("%spg1-im", results.dir),
                  skip=3, header=FALSE, sep="")
        names(loss.im.paleo) <- c("IM", "mean_x", "sd_ln_x")

        loss.edp.paleo = read.csv(
                  sprintf("%spg1-edp", results.dir),
                  skip=3, header=FALSE, sep="")
        names(loss.edp.paleo) <- c("EDP", "mean_x", "sd_ln_x")

        loss.im.neo = read.csv("example2_cg1_im.txt",
                  skip=0, header=TRUE, sep="")
        loss.edp.neo = read.csv("example2_cg1_edp.txt",
                  skip=0, header=TRUE, sep="")
    #+END_SRC

    #+RESULTS:

* Impulse Measurement Data
  Plot the IM data from the Example2 input data file against the results from
  the old new versions of slat (Figure [[fig:im-rate]]):
  #+NAME: im-rate
  #+HEADER: :results graphics
  #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
  #+BEGIN_SRC R :session :exports both
    palette(c("red", "blue", "green"))
    plot(input.im, log="xy", 
         xlab="IM", ylab="lambda", main="IM Rate",
         type="p", col=1,
         xlim=c(0.01, 3.0), ylim=c(1E-8, 1E0))

    points(paleo.im$lambda ~ paleo.im$IM, col=2)
    lines(neo.im$lambda ~ neo.im$IM, col=3)


    legend(x="topright",
         legend=c("Input", "Paleo", "Neo"),
         fill=palette())
  #+END_SRC

  #+CAPTION: IM rate calculations are consistent between the old and new code,
  #+CAPTION: even beyond the data points provided.
  #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
  #+NAME: fig:im-rate
  #+RESULTS: im-rate
  [[file:/tmp/babel-1772V7h/figure-1772-Ig.pdf]]

  Plot the probability of collapse, as reported by both versions:
  #+NAME: collapse-calc
  #+HEADER: :results graphics
  #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
  #+BEGIN_SRC R :session :exports both
    palette(c("red", "blue"))
    plot(collapse.paleo, 
         xlab="IM", ylab="p", main="Probability of Collapse",
         type="p", col=1, 
         xlim=c(0.01, 3.0), ylim=c(1E-8, 1E0))

    lines(collapse.neo$p.Collapse ~ collapse.neo$IM, col=2)

    legend(x="right",
         legend=c("Paleo", "Neo"),
         fill=palette())
  #+END_SRC

  #+CAPTION: The probability of collapse calculations are consistent between
  #+CAPTION: the old and new code.
  #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
  #+NAME: fig:collapse-calc
  #+RESULTS: collapse-calc
  [[file:/tmp/babel-1772V7h/figure-1772lny.pdf]]

  The overall rate of collapse:
  #+BEGIN_SRC sh :results output
  cd ~/Downloads/SLATv1.15_Public/example2_10storeybuilding
  cat results/collapse-rate
  #+END_SRC

  #+RESULTS:
  :  Ouput of Collapse-rate data for IM =    1
  :  |--v[C]--|
  : ---------------------------------------------------------------------------------
  :   2.1255E-04
  : 

  #+BEGIN_SRC sh :results output
  cat example2_collrate.txt
  #+END_SRC

  #+RESULTS:
  : Rate of Collapse for IM im1 is 0.0002158956085998493

  There is a small discrepancy between the two, which may be simple due to the
  libraries used for lognormal distribution.

* Engineering Design Parameter Data
** Peak Ground Acceleration
   Plot the mean acceleration of the input data, along with the values reported
   by paleoslat and neoslat (Figure [[fig:pga-data]]):
   #+NAME: pga-data
   #+HEADER: :results graphics
   #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
   #+BEGIN_SRC R :session :exports both
     n.lines <- length(accel.input)
     palette(rainbow(n.lines))
     plot(NULL, xlim=c(0, 1.5), ylim=c(0, 2), xlab="IM",
          ylab="Acceleration")
     for (i in seq(n.lines)) {
         points(accel.input[[i]]$mean ~ accel.input[[i]]$IM, 
                col=i)
         lines(accel.paleo[[i]]$mean ~ accel.paleo[[i]]$IM, 
               col=i)
         lines(accel.neo[[i]]$mean ~ accel.neo[[i]]$IM)
     }
     legend(x="topleft", legend=seq(n.lines), fill=palette())
   #+END_SRC

   #+CAPTION: Circles indicate the mean of the ground acceleration EDP values,
   #+CAPTION: with the corresponding values from paleoslat shown in the same colour.
   #+CAPTION: The values generated by neoslat are shown in black.
   #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
   #+NAME: fig:pga-data
   #+RESULTS: pga-data
   [[file:/tmp/babel-1772V7h/figure-1772_Cz.pdf]]

** Interstory Drift
   Plot the mean drift of the input data, along with the values reported
   by paleoslat and neoslat (Figure [[fig:drift-data]]):
   #+NAME: drift-data
   #+HEADER: :results graphics
   #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
   #+BEGIN_SRC R :session :exports both
     n.lines <- length(drift.input)
     palette(rainbow(n.lines))
     plot(NULL, xlim=c(0, 1.5), ylim=c(0, 0.04), xlab="IM",
          ylab="Drift")
     for (i in seq(n.lines)) {
         points(drift.input[[i]]$mean ~ drift.input[[i]]$IM, 
                col=i)
         lines(drift.paleo[[i]]$mean ~ drift.paleo[[i]]$IM, 
               col=i)
         lines(drift.neo[[i]]$mean ~ drift.neo[[i]]$IM)
     }
     legend(x="topleft", legend=seq(n.lines), fill=palette())
   #+END_SRC

   #+CAPTION: Circles indicate the mean of the inter-story drift EDP values,
   #+CAPTION: with the corresponding values from paleoslat shown in the same colour.
   #+CAPTION: The values generated by neoslat are shown in black.
   #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
   #+NAME: fig:drift-data
   #+RESULTS: drift-data
   [[file:/tmp/babel-1772V7h/figure-1772LhO.pdf]]

** Collapse
   This prints the probability of collapse taken from all EDPs. The lines are
   drawing with decreasing widths to make it clear that the data is consistent
   across all EDPs (Figure [[fig:collapse]]).
   #+NAME: collapse
   #+HEADER: :results graphics
   #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
   #+BEGIN_SRC R :session :exports both
     n.accel = length(accel.input)
     n.drift = length(drift.input)
     palette(rainbow(n.accel + n.drift))

     plot(NULL, xlim=c(0, 1.5), ylim=c(0, 1.0),
          xlab="IM", ylab="p(Collapse)", 
          main="Probability of Collapse")
    
     for (i in seq(n.accel)) {
         color = i
         lines(accel.input[[i]]$C ~ accel.input[[i]]$IM,
	     col=color,
	     lwd=n.accel + n.drift - color)
     }
     for (i in seq(n.drift)) {
         color = n.accel + i
         lines(drift.input[[i]]$C ~ drift.input[[i]]$IM,
	     col=color,
	     lwd=n.accel + n.drift - color)
     }
   #+END_SRC

   #+CAPTION: The probability of collapse is consistent across all the EDP data.
   #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
   #+NAME: fig:collapse
   #+RESULTS: collapse
   [[file:/tmp/babel-1772V7h/figure-1772y_g.pdf]]

** Ground Acceleration EDPs
   These plots show the individual data points, with the mean calculated by R in
   blue, and the points calculated by neoslat in red (Figure [[fig:pga-summary]]):
   #+NAME: pga-summary
   #+HEADER: :results graphics 
   #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
   #+BEGIN_SRC R :session :exports both
     par(mfrow=c(4,3))
     for (i in seq(1,length(accel.input))) {
         temp <- accel.input[[i]]
         plot(NULL, xlim=c(0, 1.5), 
              ylim=c(0, max(temp, na.rm=TRUE)), 
              xlab="IM", ylab="Drift",
   	   main=sprintf("Interstory Drift %d", i))
         for (j in seq(2, ncol(temp) - 3)) {
   	  points(temp[,1], temp[,j])
         }
         lines(temp$mean ~ temp$IM, col="blue")

         temp <- accel.paleo[[i]]
         points(temp$mean_x ~ temp$IM, col="green")

         temp <- accel.neo[[i]]
         points(temp$mean_x ~ temp$IM, col="red")

     }
   #+END_SRC

   #+CAPTION: This chart shows the individual PGA data points, with the mean
   #+CAPTION: calculated by R in blue, and the points calculated by neoslat in red.
   #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
   #+NAME: fig:pga-summary
   #+RESULTS: pga-summary
   [[file:/tmp/babel-1772V7h/figure-1772MiV.pdf]]

** Interstory Drift EDPs
   These plots show the individual data points, with the mean calculated by R in
   blue, and the points calculated by neoslat in red (Figure [[fig:drift-summary]]):
   #+NAME: drift-summary
   #+HEADER: :results graphics 
   #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
   #+BEGIN_SRC R :session :exports both
     par(mfrow=c(4,3))
     for (i in seq(1,length(drift.input))) {
         temp <- drift.input[[i]]
         max.col <- max(temp[2:(ncol(temp) - 3)], na.rm=TRUE)
         plot(NULL, xlim=c(0, 1.5), 
              ylim=c(0, max.col), 
              xlab="IM", ylab="Drift",
   	   main=sprintf("Interstory Drift %d", i))
         for (j in seq(2, ncol(temp) - 3)) {
   	  points(temp[,1], temp[,j])
         }
         lines(temp$mean ~ temp$IM, col="blue")

         temp <- drift.paleo[[i]]
         points(temp$mean_x ~ temp$IM, col="green")

         temp <- drift.neo[[i]]
         points(temp$mean_x ~ temp$IM, col="red")

     }
   #+END_SRC

   #+CAPTION: This chart shows the individual drift data points, with the mean
   #+CAPTION: calculated by R in blue, and the points calculated by neoslat in red.
   #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
   #+NAME: fig:drift-summary
   #+RESULTS: drift-summary
   [[file:/tmp/babel-1772V7h/figure-1772zAo.pdf]]

** Peak Ground Acceleration Rate
   This plot shows the EDP rate curve for peak ground acceleration, as
   calculated by neoslat. This does not match the user manual
   (Figure [[fig:pga-rate]]):
   #+NAME: pga-rate
   #+HEADER: :results graphics
   #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
   #+BEGIN_SRC R :session :exports both :results output
     n.accel = length(accel.rate.paleo)
     palette(rainbow(n.accel))
     plot(NULL, xlim=c(0.05, 3.0), ylim=c(1E-4, 1), log="y", 
          xlab="Peak Acceleration", ylab="lambda")
     for (i in seq(n.accel)) {
          points(accel.rate.paleo[[i]]$lambda ~ 
                 accel.rate.paleo[[i]]$EDP, col=i)
          lines(accel.rate.neo[[i]]$lambda ~ 
                accel.rate.neo[[i]]$EDP, col=i)
      }
      legend(x="topright", legend=seq(n.accel), fill=palette(), 
             ncol=2)
   #+END_SRC

   #+CAPTION: Peak ground acceleration rate. Circles represent values
   #+CAPTION: from paleoslat; lines represent values from neoslat.
   #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
   #+NAME: fig:pga-rate
   #+RESULTS: pga-rate
   [[file:/tmp/babel-1772V7h/figure-1772MpJ.pdf]]

** Interstory Drift Rate
   This plot shows the EDP rate curve for interstory drift, as calculated by
   neoslat. This does not match the user manual (Figure [[fig:drift-rate]]):
   #+NAME: drift-rate
   #+HEADER: :results graphics
   #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
   #+BEGIN_SRC R :session :exports both :results output
     n.drift = length(drift.rate.paleo)
     palette(rainbow(n.drift))
     plot(NULL, xlim=c(0.0, 0.1), ylim=c(1E-4, 1), log="y", 
          xlab="Interstory Drift", ylab="lambda")
     for (i in seq(n.drift)) {
          points(drift.rate.paleo[[i]]$lambda ~ 
                 drift.rate.paleo[[i]]$EDP, col=i)
          lines(drift.rate.neo[[i]]$lambda ~ 
                drift.rate.neo[[i]]$EDP, col=i)
      }
      legend(x="topright", legend=seq(n.drift), fill=palette(), 
             ncol=2)
   #+END_SRC

   
   #+CAPTION: Inter-story drift rate. Circles represent values
   #+CAPTION: from paleoslat; lines represent values from neoslat.
   #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
   #+NAME: fig:drift-rate
   #+RESULTS: drift-rate
   [[file:/tmp/babel-1772V7h/figure-1772m9V.pdf]]

** EDPs
*** Response
**** Acceleration
     These charts look at the ground acceleration calculations (Figures
     [[fig:pga-mean-comp]], [[fig:pga-sd-comp]], and [[fig:pga-rate-summary]]):
     #+NAME: pga-mean-comp
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       n.accel = length(accel.paleo)
       par(mfrow=c(4,3))
       for (i in seq(n.accel)) {
           plot(accel.paleo[[i]]$mean_x ~ accel.paleo[[i]]$IM, 
                type="p", ylim=c(0, 1.8), col="red", 
                xlab="IM", ylab="mean(Acceleration)",
                main=sprintf("Floor #%d", i))
           lines(accel.neo[[i]]$mean_x ~ accel.neo[[i]]$IM, 
                 col="blue")
       }
     #+END_SRC

     #+CAPTION: This shows the mean PGA for each floor is consistent
     #+CAPTION: between paleoslat (red) and neoslat (blue).
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:pga-mean-comp
     #+RESULTS: pga-mean-comp
     [[file:/tmp/babel-1772V7h/figure-1772ASi.pdf]]

     #+NAME: pga-sd-comp
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       par(mfrow=c(4,3))
       for (i in seq(n.accel)) {
           plot(accel.paleo[[i]]$sd_ln_x ~ accel.paleo[[i]]$IM, 
                type="p", ylim=c(0, 0.5), 
                col="red", xlab="IM", 
                ylab="sd(ln(Acceleration))",
                main=sprintf("Floor #%d", i))
           lines(accel.neo[[i]]$sd_ln_x ~ accel.neo[[i]]$IM, 
                 col="blue")
       }
     #+END_SRC

     #+CAPTION: This shows the standard deviation in acceleration for
     #+CAPTION: each floor is consistent between paleoslat (red) and
     #+CAPTION: neoslat (blue).
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:pga-sd-comp
     #+RESULTS: pga-sd-comp
     [[file:/tmp/babel-1772V7h/figure-1772koV.pdf]]


     #+NAME: pga-rate-summary
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
      par(mfrow=c(4,3))
      for (i in seq(n.accel)) {
          plot(accel.rate.paleo[[i]]$lambda ~ 
               accel.rate.paleo[[i]]$EDP, 
               type="p", col="red", log="xy", 
               ylim=c(1E-4, 1E0),
               xlab="Acceleration", ylab="lambda",
               main=sprintf("Floor #%d", i))
          lines(accel.rate.neo[[i]]$lambda ~ 
                accel.rate.neo[[i]]$EDP,
                col="blue")
      }
     #+END_SRC

     #+CAPTION: This shows the rate of exceedence in acceleration for
     #+CAPTION: each floor is consistent between paleoslat (red) and
     #+CAPTION: neoslat (blue), up to a point.
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:pga-rate-summary
     #+RESULTS: pga-rate-summary
     [[file:/tmp/babel-1772V7h/figure-1772Z6D.pdf]]

**** Drift
     These charts look at the inter-story drift calculations (Figures
     [[fig:drift-mean-comp]], [[fig:drift-sd-comp]], and [[fig:drift-rate-summary]]):

     #+NAME: drift-mean-comp
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       n.drift = length(drift.paleo)
       par(mfrow=c(4,3))
       for (i in seq(n.drift)) {
           plot(drift.paleo[[i]]$mean_x ~ drift.paleo[[i]]$IM, 
                type="p", ylim=c(0, 0.04), 
     	   col="red", xlab="IM", ylab="mean(Drift)", 
                main=sprintf("Story #%d", i))
           lines(drift.neo[[i]]$mean_x ~ drift.neo[[i]]$IM, 
                 col="blue")
       }
     #+END_SRC

     #+CAPTION: This shows the mean drift for each floor is consistent
     #+CAPTION: between paleoslat (red) and neoslat (blue).
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:drift-mean-comp
     #+RESULTS: drift-mean-comp
     [[file:/tmp/babel-1772V7h/figure-1772KUJ.pdf]]

     #+NAME: drift-sd-comp
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       par(mfrow=c(4,3))
       for (i in seq(n.drift)) {
           plot(drift.paleo[[i]]$sd_ln_x ~ drift.paleo[[i]]$IM, 
                type="p", ylim=c(0, 1.2), 
     	   col="red", xlab="IM", ylab="sd(ln(Drift))", 
                main=sprintf("Story #%d", i))
           lines(drift.neo[[i]]$sd_ln_x ~ drift.neo[[i]]$IM, 
                 col="blue")
       }
     #+END_SRC

     #+CAPTION: This shows the standard deviation in drift for
     #+CAPTION: each floor is consistent between paleoslat (red) and
     #+CAPTION: neoslat (blue).
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:drift-sd-comp
     #+RESULTS: drift-sd-comp


     #+NAME: drift-rate-summary
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       par(mfrow=c(4,3))
       for (i in seq(n.drift)) {
           plot(drift.rate.paleo[[i]]$lambda ~ 
                drift.rate.paleo[[i]]$EDP, 
                type="p", col="red", log="xy",
     	   xlab="Drift", ylab="lambda",
     	   main=sprintf("Story #%d", i),
                ylim=c(1E-4, 1E-1))
           lines(drift.rate.neo[[i]]$lambda ~ 
                 drift.rate.neo[[i]]$EDP, 
                 col="blue")
       }
      #+END_SRC

     #+CAPTION: This shows the rate of exceedence in drift for
     #+CAPTION: each floor is consistent between paleoslat (red) and
     #+CAPTION: neoslat (blue), up to a point.
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:drift-rate-summary
     #+RESULTS: drift-rate-summary
     [[file:/tmp/babel-1772V7h/figure-1772Edy.pdf]]


** EDP1
*** Response
    #+NAME: accel1-mean
    #+HEADER: :results graphics
    #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
    #+BEGIN_SRC R :session :exports both :results output
      i = 1
      plot(accel.paleo[[i]]$mean_x ~ accel.paleo[[i]]$IM, 
           type="p", ylim=c(0, 1.8), col="red",
	   ylab="mean_x", xlab="Acceleration",
	   main=sprintf("Floor #%d", i))
      lines(accel.neo[[i]]$mean_x ~ accel.neo[[i]]$IM, 
    	col="blue")
      legend(x="topleft", legend=c("Paleo", "Neo"), 
         fill=c("red", "blue"))
    #+END_SRC

    #+CAPTION: This chart shows the mean acceleration for the ground
    #+CAPTION: floor is consistent between paleoslat and neoslat, even
    #+CAPTION: beyond the provided data points.
    #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
    #+NAME: fig:accel1-mean
    #+RESULTS: accel1-mean
    [[file:/tmp/babel-1772V7h/figure-1772BM1.pdf]]

    #+NAME: accel1-sd
    #+HEADER: :results graphics
    #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
    #+BEGIN_SRC R :session :exports both :results output
      plot(accel.paleo[[i]]$sd_ln_x ~ accel.paleo[[i]]$IM, 
           type="p", ylim=c(0, 0.5), col="red",
	   ylab="std_ln_x", xlab="Acceleration",
	   main=sprintf("Floor #%d", i))
      lines(accel.neo[[i]]$sd_ln_x ~ accel.neo[[i]]$IM, 
    	col="blue")
      legend(x="topleft", legend=c("Paleo", "Neo"), 
         fill=c("red", "blue"))
    #+END_SRC

    #+CAPTION: This chart shows the standard deviation of
    #+CAPTION: acceleration for the ground floor is
    #+CAPTION: consistent between paleoslat and neoslat,
    #+CAPTION: even beyond the provided data points.
    #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
    #+NAME: fig:accel1-sd
    #+RESULTS: accel1-sd
    [[file:/tmp/babel-1772V7h/figure-1772AgK.pdf]]


*** Rate
    #+NAME: accel1-rate
    #+HEADER: :results graphics
    #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
    #+BEGIN_SRC R :session :exports both :results output
      paleo <- accel.rate.paleo[[i]]
      neo <- accel.rate.neo[[i]]
      plot(paleo$lambda ~ paleo$EDP, type="p", col="red", log="xy",
           ylim=c(1E-4, 1E-1),
	   xlab="Acceleration", ylab="lambda",
	   main=sprintf("Floor #%d", i))
      lines(neo$lambda ~ neo$EDP, col="blue")
      legend(x="topright", legend=c("Paleo", "Neo"),
    	 fill=c("red", "blue"))
    #+END_SRC

    #+CAPTION: This chart shows the rate of exceedence of
    #+CAPTION: acceleration for the ground floor is
    #+CAPTION: consistent between paleoslat and neoslat,
    #+CAPTION: up to a point.
    #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
    #+NAME: fig:accel1-rate
    #+RESULTS: accel1-rate
    [[file:/tmp/babel-1772V7h/figure-1772a0W.pdf]]


** Drift 1
*** Response
    #+NAME: drift1-mean
    #+HEADER: :results graphics
    #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
    #+BEGIN_SRC R :session :exports both :results output
      drift.num = 1
      paleo <- drift.paleo[[drift.num]]
      neo <- drift.neo[[drift.num]]
      plot(paleo$mean_x ~ paleo$IM, 
           type="p", ylim=c(0, 0.04), col="red",
	   ylab="mean_x", xlab="IM",
	   main=sprintf("Drift #%d Mean", drift.num))
      lines(neo$mean_x ~ neo$IM, col="blue")
      legend(x="topleft", legend=c("Paleo", "Neo"), 
         fill=c("red", "blue"))
    #+END_SRC

    #+CAPTION: This chart shows the mean drift for the ground
    #+CAPTION: floor is consistent between paleoslat and neoslat, even
    #+CAPTION: beyond the provided data points.
    #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
    #+NAME: fig:drift1-mean
    #+RESULTS: drift1-mean
    [[file:/tmp/babel-1772V7h/figure-17720Ij.pdf]]

    #+NAME: drift1-sd
    #+HEADER: :results graphics
    #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
    #+BEGIN_SRC R :session :exports both :results output
      plot(paleo$sd_ln_x ~ paleo$IM, 
           type="p", ylim=c(0, 1.5), col="red",
	   ylab="sd_ln_x", xlab="IM",
	   main=sprintf("Drift #%d Dispersion", drift.num))
      lines(neo$sd_ln_x ~ neo$IM, col="blue")
      legend(x="topleft", legend=c("Paleo", "Neo"), 
         fill=c("red", "blue"))
    #+END_SRC

    #+CAPTION: This chart shows the standard deviation of
    #+CAPTION: drift for the ground floor is
    #+CAPTION: consistent between paleoslat and neoslat,
    #+CAPTION: even beyond the provided data points.
    #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
    #+NAME: fig:drift1-sd
    #+RESULTS: drift1-sd
    [[file:/tmp/babel-1772V7h/figure-1772Odv.pdf]]


*** Rate
    #+NAME: drift1-rate
    #+HEADER: :results graphics
    #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
    #+BEGIN_SRC R :session :exports both :results output
      paleo <- drift.rate.paleo[[drift.num]]
      neo <- drift.rate.neo[[drift.num]]
      plot(paleo$lambda ~ paleo$EDP, type="p", col="red", log="y",
           ylim=c(1E-4, 1E0), xlim=c(0.0, 0.1),
	   ylab="lambda", xlab="Drift",
	   main=sprintf("Drift #%d Rate", drift.num))
      lines(neo$lambda ~ neo$EDP, col="blue")
      legend(x="topright", legend=c("Paleo", "Neo"),
    	 fill=c("red", "blue"))
    #+END_SRC

    #+CAPTION: This chart shows the rate of exceedence of
    #+CAPTION: drift for the ground floor is
    #+CAPTION: consistent between paleoslat and neoslat,
    #+CAPTION: up to a point.
    #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
    #+NAME: fig:drift1-rate
    #+RESULTS: drift1-rate
    [[file:/tmp/babel-1772V7h/figure-1772NxE.pdf]]
* Loss
** EDP
     #+NAME: loss-edp-1-mean
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       paleo <- loss.edp.paleo
       neo <- loss.edp.neo
       plot(paleo$mean_x ~ paleo$EDP, type="p", col="red", log="y",
	    ylab="Loss", xlab="EDP",
	    main="Mean Loss for Component Group #1")
       lines(neo$mean_x ~ neo$EDP, col="blue")
       legend(x="topright", legend=c("Paleo", "Neo"),
    	  fill=c("red", "blue"))
     #+END_SRC

     #+CAPTION: This graph compares the loss calculated for
     #+CAPTION: first component group by both versions.
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:loss-edp-1-mean
     #+RESULTS: loss-edp-1-mean
     [[file:/tmp/babel-1772V7h/figure-1772nFR.pdf]]

     #+NAME: loss-edp-1-sd
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       ylim = c(min(paleo$sd_ln_x, neo$sd_ln_x),
           max(paleo$sd_ln_x, neo$sd_ln_x))
       plot(paleo$sd_ln_x ~ paleo$EDP, type="p", col="red", log="",
            ylab="Loss", xlab="EDP",
            ylim=ylim,
            main="Standard Deviation Loss for Component Group #1")
       lines(neo$sd_ln_x ~ neo$EDP, col="blue")
       legend(x="topright", legend=c("Paleo", "Neo"),
          fill=c("red", "blue"))
     #+END_SRC

     #+CAPTION: This graph compares the standard deviation of the
     #+CAPTION: loss calculated for first component group by both
     #+CAPTION: versions.
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:loss-edp-1-sd
     #+RESULTS: loss-edp-1-sd
     [[file:/tmp/babel-1772V7h/figure-1772Bad.pdf]]
** IM
     #+NAME: loss-im-1-mean
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       paleo <- loss.im.paleo
       neo <- loss.im.neo
       plot(paleo$mean_x ~ paleo$IM, type="p", col="red", log="y",
	    ylab="Loss", xlab="IM",
	    main="Mean Loss for Component Group #1")
       lines(neo$mean_x ~ neo$IM, col="blue")
       legend(x="topright", legend=c("Paleo", "Neo"),
    	  fill=c("red", "blue"))
     #+END_SRC

     #+CAPTION: This graph compares the loss calculated for
     #+CAPTION: first component group by both versions.
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:loss-im-1-mean
     #+RESULTS: loss-im-1-mean
     [[file:/tmp/babel-1772V7h/figure-1772bup.pdf]]

     #+NAME: loss-im-1-sd
     #+HEADER: :results graphics
     #+HEADER: :file (org-babel-temp-file "./figure-" ".pdf")
     #+BEGIN_SRC R :session :exports both :results output
       plot(paleo$sd_ln_x ~ paleo$IM, type="p", col="red", log="",
	    ylab="Loss", xlab="IM",
	    ylim=c(0.1, 10),
	    main="Standard Deviation Loss for Component Group #1")
       lines(neo$sd_ln_x ~ neo$IM, col="blue")
       legend(x="topright", legend=c("Paleo", "Neo"),
    	  fill=c("red", "blue"))
     #+END_SRC

     #+CAPTION: This graph compares the standard deviation of the
     #+CAPTION: loss calculated for first component group by both
     #+CAPTION: versions.
     #+ATTR_LaTeX: :width \textwidth*4/4 :placement [h!bt]
     #+NAME: fig:loss-im-1-sd
     #+RESULTS: loss-im-1-sd
     [[file:/tmp/babel-1772V7h/figure-17721C2.pdf]]

